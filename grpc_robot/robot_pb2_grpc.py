# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from grpc_robot import robot_pb2 as robot__pb2


class RobotStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Connect = channel.unary_unary(
                '/robot.Robot/Connect',
                request_serializer=robot__pb2.ConnectRequest.SerializeToString,
                response_deserializer=robot__pb2.StateResponse.FromString,
                )
        self.Disconnect = channel.unary_unary(
                '/robot.Robot/Disconnect',
                request_serializer=robot__pb2.EmptyRequest.SerializeToString,
                response_deserializer=robot__pb2.StateResponse.FromString,
                )
        self.RunBuffMidsole = channel.unary_unary(
                '/robot.Robot/RunBuffMidsole',
                request_serializer=robot__pb2.BuffMidsoleRequest.SerializeToString,
                response_deserializer=robot__pb2.StateResponse.FromString,
                )
        self.PowerOn = channel.unary_unary(
                '/robot.Robot/PowerOn',
                request_serializer=robot__pb2.EmptyRequest.SerializeToString,
                response_deserializer=robot__pb2.StateResponse.FromString,
                )
        self.PowerOff = channel.unary_unary(
                '/robot.Robot/PowerOff',
                request_serializer=robot__pb2.EmptyRequest.SerializeToString,
                response_deserializer=robot__pb2.StateResponse.FromString,
                )
        self.Enable = channel.unary_unary(
                '/robot.Robot/Enable',
                request_serializer=robot__pb2.EmptyRequest.SerializeToString,
                response_deserializer=robot__pb2.StateResponse.FromString,
                )
        self.Disable = channel.unary_unary(
                '/robot.Robot/Disable',
                request_serializer=robot__pb2.EmptyRequest.SerializeToString,
                response_deserializer=robot__pb2.StateResponse.FromString,
                )
        self.Shutdown = channel.unary_unary(
                '/robot.Robot/Shutdown',
                request_serializer=robot__pb2.EmptyRequest.SerializeToString,
                response_deserializer=robot__pb2.StateResponse.FromString,
                )
        self.Pause = channel.unary_unary(
                '/robot.Robot/Pause',
                request_serializer=robot__pb2.EmptyRequest.SerializeToString,
                response_deserializer=robot__pb2.StateResponse.FromString,
                )
        self.Resume = channel.unary_unary(
                '/robot.Robot/Resume',
                request_serializer=robot__pb2.EmptyRequest.SerializeToString,
                response_deserializer=robot__pb2.StateResponse.FromString,
                )
        self.Stop = channel.unary_unary(
                '/robot.Robot/Stop',
                request_serializer=robot__pb2.EmptyRequest.SerializeToString,
                response_deserializer=robot__pb2.StateResponse.FromString,
                )
        self.MoveHome = channel.unary_unary(
                '/robot.Robot/MoveHome',
                request_serializer=robot__pb2.EmptyRequest.SerializeToString,
                response_deserializer=robot__pb2.StateResponse.FromString,
                )
        self.LoadProgram = channel.unary_unary(
                '/robot.Robot/LoadProgram',
                request_serializer=robot__pb2.LoadProgramRequest.SerializeToString,
                response_deserializer=robot__pb2.LoadProgramResponse.FromString,
                )
        self.RunProgram = channel.unary_unary(
                '/robot.Robot/RunProgram',
                request_serializer=robot__pb2.EmptyRequest.SerializeToString,
                response_deserializer=robot__pb2.StateResponse.FromString,
                )
        self.MoveTCP = channel.unary_unary(
                '/robot.Robot/MoveTCP',
                request_serializer=robot__pb2.MoveTCPRequest.SerializeToString,
                response_deserializer=robot__pb2.StateResponse.FromString,
                )
        self.SetIO = channel.unary_unary(
                '/robot.Robot/SetIO',
                request_serializer=robot__pb2.IORequest.SerializeToString,
                response_deserializer=robot__pb2.StateResponse.FromString,
                )
        self.GetProgramState = channel.unary_unary(
                '/robot.Robot/GetProgramState',
                request_serializer=robot__pb2.EmptyRequest.SerializeToString,
                response_deserializer=robot__pb2.ProgramStateResponse.FromString,
                )
        self.Abortprogram = channel.unary_unary(
                '/robot.Robot/Abortprogram',
                request_serializer=robot__pb2.EmptyRequest.SerializeToString,
                response_deserializer=robot__pb2.StateResponse.FromString,
                )
        self.GetPos = channel.unary_unary(
                '/robot.Robot/GetPos',
                request_serializer=robot__pb2.EmptyRequest.SerializeToString,
                response_deserializer=robot__pb2.PosResponse.FromString,
                )
        self.SetToolId = channel.unary_unary(
                '/robot.Robot/SetToolId',
                request_serializer=robot__pb2.ToolIdRequest.SerializeToString,
                response_deserializer=robot__pb2.StateResponse.FromString,
                )
        self.GetToolId = channel.unary_unary(
                '/robot.Robot/GetToolId',
                request_serializer=robot__pb2.EmptyRequest.SerializeToString,
                response_deserializer=robot__pb2.ToolIdResponse.FromString,
                )
        self.SetCoordinateId = channel.unary_unary(
                '/robot.Robot/SetCoordinateId',
                request_serializer=robot__pb2.CoordinateIdRequest.SerializeToString,
                response_deserializer=robot__pb2.StateResponse.FromString,
                )
        self.GetCoordinateId = channel.unary_unary(
                '/robot.Robot/GetCoordinateId',
                request_serializer=robot__pb2.EmptyRequest.SerializeToString,
                response_deserializer=robot__pb2.CoordinateIdResponse.FromString,
                )


class RobotServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Connect(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Disconnect(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RunBuffMidsole(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PowerOn(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PowerOff(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Enable(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Disable(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Shutdown(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Pause(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Resume(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Stop(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MoveHome(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LoadProgram(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RunProgram(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MoveTCP(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetIO(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetProgramState(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Abortprogram(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPos(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetToolId(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetToolId(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetCoordinateId(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCoordinateId(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RobotServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Connect': grpc.unary_unary_rpc_method_handler(
                    servicer.Connect,
                    request_deserializer=robot__pb2.ConnectRequest.FromString,
                    response_serializer=robot__pb2.StateResponse.SerializeToString,
            ),
            'Disconnect': grpc.unary_unary_rpc_method_handler(
                    servicer.Disconnect,
                    request_deserializer=robot__pb2.EmptyRequest.FromString,
                    response_serializer=robot__pb2.StateResponse.SerializeToString,
            ),
            'RunBuffMidsole': grpc.unary_unary_rpc_method_handler(
                    servicer.RunBuffMidsole,
                    request_deserializer=robot__pb2.BuffMidsoleRequest.FromString,
                    response_serializer=robot__pb2.StateResponse.SerializeToString,
            ),
            'PowerOn': grpc.unary_unary_rpc_method_handler(
                    servicer.PowerOn,
                    request_deserializer=robot__pb2.EmptyRequest.FromString,
                    response_serializer=robot__pb2.StateResponse.SerializeToString,
            ),
            'PowerOff': grpc.unary_unary_rpc_method_handler(
                    servicer.PowerOff,
                    request_deserializer=robot__pb2.EmptyRequest.FromString,
                    response_serializer=robot__pb2.StateResponse.SerializeToString,
            ),
            'Enable': grpc.unary_unary_rpc_method_handler(
                    servicer.Enable,
                    request_deserializer=robot__pb2.EmptyRequest.FromString,
                    response_serializer=robot__pb2.StateResponse.SerializeToString,
            ),
            'Disable': grpc.unary_unary_rpc_method_handler(
                    servicer.Disable,
                    request_deserializer=robot__pb2.EmptyRequest.FromString,
                    response_serializer=robot__pb2.StateResponse.SerializeToString,
            ),
            'Shutdown': grpc.unary_unary_rpc_method_handler(
                    servicer.Shutdown,
                    request_deserializer=robot__pb2.EmptyRequest.FromString,
                    response_serializer=robot__pb2.StateResponse.SerializeToString,
            ),
            'Pause': grpc.unary_unary_rpc_method_handler(
                    servicer.Pause,
                    request_deserializer=robot__pb2.EmptyRequest.FromString,
                    response_serializer=robot__pb2.StateResponse.SerializeToString,
            ),
            'Resume': grpc.unary_unary_rpc_method_handler(
                    servicer.Resume,
                    request_deserializer=robot__pb2.EmptyRequest.FromString,
                    response_serializer=robot__pb2.StateResponse.SerializeToString,
            ),
            'Stop': grpc.unary_unary_rpc_method_handler(
                    servicer.Stop,
                    request_deserializer=robot__pb2.EmptyRequest.FromString,
                    response_serializer=robot__pb2.StateResponse.SerializeToString,
            ),
            'MoveHome': grpc.unary_unary_rpc_method_handler(
                    servicer.MoveHome,
                    request_deserializer=robot__pb2.EmptyRequest.FromString,
                    response_serializer=robot__pb2.StateResponse.SerializeToString,
            ),
            'LoadProgram': grpc.unary_unary_rpc_method_handler(
                    servicer.LoadProgram,
                    request_deserializer=robot__pb2.LoadProgramRequest.FromString,
                    response_serializer=robot__pb2.LoadProgramResponse.SerializeToString,
            ),
            'RunProgram': grpc.unary_unary_rpc_method_handler(
                    servicer.RunProgram,
                    request_deserializer=robot__pb2.EmptyRequest.FromString,
                    response_serializer=robot__pb2.StateResponse.SerializeToString,
            ),
            'MoveTCP': grpc.unary_unary_rpc_method_handler(
                    servicer.MoveTCP,
                    request_deserializer=robot__pb2.MoveTCPRequest.FromString,
                    response_serializer=robot__pb2.StateResponse.SerializeToString,
            ),
            'SetIO': grpc.unary_unary_rpc_method_handler(
                    servicer.SetIO,
                    request_deserializer=robot__pb2.IORequest.FromString,
                    response_serializer=robot__pb2.StateResponse.SerializeToString,
            ),
            'GetProgramState': grpc.unary_unary_rpc_method_handler(
                    servicer.GetProgramState,
                    request_deserializer=robot__pb2.EmptyRequest.FromString,
                    response_serializer=robot__pb2.ProgramStateResponse.SerializeToString,
            ),
            'Abortprogram': grpc.unary_unary_rpc_method_handler(
                    servicer.Abortprogram,
                    request_deserializer=robot__pb2.EmptyRequest.FromString,
                    response_serializer=robot__pb2.StateResponse.SerializeToString,
            ),
            'GetPos': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPos,
                    request_deserializer=robot__pb2.EmptyRequest.FromString,
                    response_serializer=robot__pb2.PosResponse.SerializeToString,
            ),
            'SetToolId': grpc.unary_unary_rpc_method_handler(
                    servicer.SetToolId,
                    request_deserializer=robot__pb2.ToolIdRequest.FromString,
                    response_serializer=robot__pb2.StateResponse.SerializeToString,
            ),
            'GetToolId': grpc.unary_unary_rpc_method_handler(
                    servicer.GetToolId,
                    request_deserializer=robot__pb2.EmptyRequest.FromString,
                    response_serializer=robot__pb2.ToolIdResponse.SerializeToString,
            ),
            'SetCoordinateId': grpc.unary_unary_rpc_method_handler(
                    servicer.SetCoordinateId,
                    request_deserializer=robot__pb2.CoordinateIdRequest.FromString,
                    response_serializer=robot__pb2.StateResponse.SerializeToString,
            ),
            'GetCoordinateId': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCoordinateId,
                    request_deserializer=robot__pb2.EmptyRequest.FromString,
                    response_serializer=robot__pb2.CoordinateIdResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'robot.Robot', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Robot(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Connect(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/robot.Robot/Connect',
            robot__pb2.ConnectRequest.SerializeToString,
            robot__pb2.StateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Disconnect(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/robot.Robot/Disconnect',
            robot__pb2.EmptyRequest.SerializeToString,
            robot__pb2.StateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RunBuffMidsole(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/robot.Robot/RunBuffMidsole',
            robot__pb2.BuffMidsoleRequest.SerializeToString,
            robot__pb2.StateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PowerOn(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/robot.Robot/PowerOn',
            robot__pb2.EmptyRequest.SerializeToString,
            robot__pb2.StateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PowerOff(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/robot.Robot/PowerOff',
            robot__pb2.EmptyRequest.SerializeToString,
            robot__pb2.StateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Enable(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/robot.Robot/Enable',
            robot__pb2.EmptyRequest.SerializeToString,
            robot__pb2.StateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Disable(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/robot.Robot/Disable',
            robot__pb2.EmptyRequest.SerializeToString,
            robot__pb2.StateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Shutdown(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/robot.Robot/Shutdown',
            robot__pb2.EmptyRequest.SerializeToString,
            robot__pb2.StateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Pause(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/robot.Robot/Pause',
            robot__pb2.EmptyRequest.SerializeToString,
            robot__pb2.StateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Resume(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/robot.Robot/Resume',
            robot__pb2.EmptyRequest.SerializeToString,
            robot__pb2.StateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Stop(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/robot.Robot/Stop',
            robot__pb2.EmptyRequest.SerializeToString,
            robot__pb2.StateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def MoveHome(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/robot.Robot/MoveHome',
            robot__pb2.EmptyRequest.SerializeToString,
            robot__pb2.StateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LoadProgram(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/robot.Robot/LoadProgram',
            robot__pb2.LoadProgramRequest.SerializeToString,
            robot__pb2.LoadProgramResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RunProgram(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/robot.Robot/RunProgram',
            robot__pb2.EmptyRequest.SerializeToString,
            robot__pb2.StateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def MoveTCP(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/robot.Robot/MoveTCP',
            robot__pb2.MoveTCPRequest.SerializeToString,
            robot__pb2.StateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetIO(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/robot.Robot/SetIO',
            robot__pb2.IORequest.SerializeToString,
            robot__pb2.StateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetProgramState(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/robot.Robot/GetProgramState',
            robot__pb2.EmptyRequest.SerializeToString,
            robot__pb2.ProgramStateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Abortprogram(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/robot.Robot/Abortprogram',
            robot__pb2.EmptyRequest.SerializeToString,
            robot__pb2.StateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPos(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/robot.Robot/GetPos',
            robot__pb2.EmptyRequest.SerializeToString,
            robot__pb2.PosResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetToolId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/robot.Robot/SetToolId',
            robot__pb2.ToolIdRequest.SerializeToString,
            robot__pb2.StateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetToolId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/robot.Robot/GetToolId',
            robot__pb2.EmptyRequest.SerializeToString,
            robot__pb2.ToolIdResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetCoordinateId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/robot.Robot/SetCoordinateId',
            robot__pb2.CoordinateIdRequest.SerializeToString,
            robot__pb2.StateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetCoordinateId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/robot.Robot/GetCoordinateId',
            robot__pb2.EmptyRequest.SerializeToString,
            robot__pb2.CoordinateIdResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
